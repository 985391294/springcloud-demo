#服务的名称
spring.application.name=eureka-server
#注册中心的端口号
server.port=1111
#实例名称，默认为localhost
eureka.instance.hostname=eureka1
#应用实例IP
eureka.instance.ip-address=127.0.0.1

#客户端在注册时使用自己的IP而不是主机名，缺省：false
eureka.instance.prefer-ip-address=false

#是否启用客户端健康检查
eureka.client.health-check.enabled=true

#添加eureka访问界面的用户名和密码
spring.security.user.name=admin
spring.security.user.password=123456
#是否将自己注册到Eureka服务中,因为该应用本身就是注册中心，不需要再注册自己（集群的时候为true）
#集群该参数一定要设置为true或者不写,否则会出现unavailable-replicas
eureka.client.register-with-eureka=false
#是否从Eureka中获取注册信息,因为自己为注册中心,不会在该应用中的检索服务信息
#集群该参数一定要设置为true或者不写,否则会出现unavailable-replicas
eureka.client.fetch-registry=false

#Eureka高可用部署，启动多个注册中心后，节点均出现在unavailable-replicas，查阅各类资料测试，提供方案：
#eureka.client.serviceUrl.defaultZone配置项的地址，不能使用localhost，要使用ip或域名
eureka.client.service-url.defaultZone=http://${spring.security.user.name}:${spring.security.user.password}@eureka1:1111/eureka

#关闭eureka的自我保护机制，为90秒，且默认值为ture，意思是如果超过90秒还连接不上的话，
#他会认为网络比较差或者写错了注册中心的ip，会一致连接
#如果这个值设置为false的话，超过90秒，就挂了，一般不推荐使用
#eureka.server.enable-self-preservation=false

#服务失效时间，失效的服务将被剔除。单位：秒，默认：90
eureka.instance.lease-expiration-duration-in-seconds=90
#服务续约（心跳）频率，单位：秒，缺省为30
eureka.instance.lease-renewal-interval-in-seconds=30

# 客户端拉取服务注册信息间隔，单位：秒，缺省：30
eureka.client.registry-fetch-interval-seconds=30
#Eureka服务器清理无效节点的时间间隔，单位：毫秒，缺省：60000，即60秒
eureka.server.eviction-interval-timer-in-ms=60000
#Peer节点更新间隔，单位：毫秒
#eureka.server.peer-eureka-nodes-update-interval-ms=6000

#连接Eureka服务器的超时时间，单位：秒，缺省：5
eureka.client.eureka-server-connect-timeout-seconds=5
#从Eureka服务器读取信息的超时时间，单位：秒，缺省：8
eureka.client.eureka-server-read-timeout-seconds=8
#获取实例时是否只保留状态为 UP 的实例，缺省：true
eureka.client.filter-only-up-instances=true
#Eureka服务端连接空闲时的关闭时间，单位：秒，缺省：30
eureka.client.eureka-connection-idle-timeout-seconds=30
#从Eureka客户端到所有Eureka服务端的连接总数，缺省：200
eureka.client.eureka-server-total-connections=200
#从Eureka客户端到每个Eureka服务主机的连接总数，缺省：50
eureka.client.eureka-server-total-connections-per-host=50