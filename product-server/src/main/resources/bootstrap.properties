#bootstrap会先加载，在结合configserver一起使用时，bootstrap属性文件更适合做一些引导下文的配置
#在结合configserver使用时，bootstrap更多的是配置一些不经常变化甚至不变化的属性
#bootstrap.properties是被一个父级的Spring ApplictionContext加载的，
# 这个父级的SpringApplictionContext是先加载的，在加载application.properties之前

#Spring是有上下文一说的，也叫Application Context，Application Context又是有父子关系的，
# 所以必须要理解ApplicationContext是什么。SpringCloud启动时，会先创建一个Bootstrap Context，
# 然后创建一个Application Context，Bootstrap Context是Application Context的父上下文，
# Bootstrap负责从外部源加载配置并解析，这两个上下文共用一个从外部获取的Environment。
# Bootstrap配置具有较高的优先级，不会被本地配置覆盖。Bootstrap典型的应用场景是使用SpringConfig，
# 这个时候你需要把配置信息配在bootstrap里面。Bootstrap属于引导配置，Application属于应用配置。

#server.port=2222

#服务端连接注册中心的地址(http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:8100/eureka/)
eureka.client.service-url.defaultZone=http://admin:123456@localhost:1111/eureka/

#服务的名字，一般给groupid保持一致
spring.application.name=product-server

#配置中心的服务名
spring.cloud.config.discovery.service-id=config-server
#开启配置信息发现
spring.cloud.config.discovery.enabled=true
#分支的名称(开源项目可配可不配)
spring.cloud.config.label=master